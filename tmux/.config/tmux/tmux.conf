set-option -sa terminal-overrides ",xterm*:Tc"
set -g mouse on

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'catppuccin/tmux#1.0.1'
set -g @plugin 'fabioluciano/tmux-tokyo-night'

# Configure the catppuccin plugin
# set -g @catppuccin_flavor "macchiato"
# set -g @catppuccin_window_status_style "basic"
# set -g @catppuccin_status_left_separator "█"
# set -g @catppuccin_status_right_separator "█"
# leave this unset to let applications set the window title
# set -g @catppuccin_window_default_text " #W"
# set -g @catppuccin_window_current_text " #W"
# set -g @catppuccin_window_status "icon"
# set -g @catppuccin_window_current_background "#{@thm_mauve}"
# Load catppuccin
# run ~/.config/tmux/plugins/tmux/catppuccin.tmux
# Make the status line pretty and add some modules
# set -g status-left ""
# set -g status-right-length 200
# set -g status-right "#{E:@catppuccin_status_application}"
# set -ag status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_user}"
# set -ag status-right "#{E:@catppuccin_status_host}"
# set -ag status-right "#{E:@catppuccin_status_date_time}"

### Tokyo Night Theme configuration
set -g @theme_variation 'moon'
set -g @theme_plugins 'datetime'
set -g @theme_plugin_datetime_format '%Y-%m-%d %H:%M'

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-Left  if -F "#{@pane-is-vim}" 'send-keys C-Left'  'resize-pane -L 3'
bind-key -n C-Down  if -F "#{@pane-is-vim}" 'send-keys C-Down'  'resize-pane -D 3'
bind-key -n C-Up    if -F "#{@pane-is-vim}" 'send-keys C-Up'    'resize-pane -U 3'
bind-key -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Right' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# set vi-mode
set-window-option -g mode-keys vi
# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Open panes in current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# enable OSC 52 on the tmux side
set -g set-clipboard on

# enable passthrough to make image.nvim work
set -gq allow-passthrough on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
