[aws]
symbol = "  "

[buf]
symbol = " "

[c]
symbol = " "

[conda]
symbol = " "

[crystal]
symbol = " "

[dart]
symbol = " "

[directory]
read_only = " 󰌾"

[direnv]
disabled = true
symbol = " "
allowed_msg = "allowed"

[docker_context]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[fennel]
symbol = " "

[fossil_branch]
symbol = " "

[gcloud]
disabled = true

[git_branch]
symbol = " "

[golang]
symbol = " "

[guix_shell]
symbol = " "

[haskell]
symbol = " "

[haxe]
symbol = " "

[hg_branch]
symbol = " "

[hostname]
ssh_symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[kotlin]
symbol = " "

[lua]
symbol = " "

[memory_usage]
symbol = "󰍛 "

[meson]
symbol = "󰔷 "

[nim]
symbol = "󰆥 "

[nix_shell]
symbol = " "

[nodejs]
symbol = " "

[ocaml]
symbol = " "

[os.symbols]
Alpaquita = " "
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "

[perl]
symbol = " "

[php]
symbol = " "

[pijul_channel]
symbol = " "

[python]
symbol = " "
# format = 'via [${symbol}${pyenv_prefix}(\($virtualenv\) )]($style)'
python_binary = [
  './venv/bin/python',
  './.venv/bin/python',
  'python',
  'python3',
  'python2',
]

[rlang]
symbol = "󰟔 "

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shell]
fish_indicator = '󰈺 '
powershell_indicator = '_'
unknown_indicator = 'mystery shell'
style = 'cyan bold'
disabled = true

[swift]
symbol = " "

[zig]
symbol = " "

# Disable native container detector
[container]
disabled = true

# Detect if in container but NOT via SSH
[custom.real_container]
when = 'test -f /run/.containerenv && [ -z "$SSH_CONNECTION" ]'
command = '''
  name=$(cat /run/systemd/container 2>/dev/null || echo container)
  printf "⬢ [%s]" "$name"
'''
format = "[$output]($style) "
style = "bold red dimmed"

[custom.git_scope]
disabled = true
command = '''
printf "%s (%s)" \
  "$(if [ -n "$GIT_AUTHOR_EMAIL" ]; then echo "$GIT_AUTHOR_EMAIL"; else git config user.email; fi)" \
  "$(if [ -n "$GIT_AUTHOR_NAME" ]; then echo "$GIT_AUTHOR_NAME"; else git config user.name; fi)"
'''
description = 'The currently configured Git user.{email,name}'
format = 'as [$output]($style) '
shell = ["dash"]
style = 'blue bold'
when = 'git rev-parse --is-inside-work-tree'

[custom.git_email]
disabled = true
command = "git config user.email"
when = "git rev-parse --git-dir 2> /dev/null"
format = "by [$output]($style) "
style = "blue bold"

[custom.gcloud_conditional]
disabled = true
description = "Displays the current GCP project if .tf files are present"
when = "sh -c '[ -n \"$(ls *.tf 2>/dev/null)\" ]'"
command = "echo $(gcloud config get-value project)"
shell = ["sh", "-c"]
symbol = "☁️ "
